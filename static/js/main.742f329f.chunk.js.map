{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundry.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","Cardlist","robots","cardComponent","map","user","i","Components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","inherits","createClass","value","error","info","setState","Component","App","onSearchChange","event","target","_this2","fetch","then","response","json","users","_this3","filteredRobots","filter","toLowerCase","includes","length","Components_SearchBox","Components_Scroll","ErrorBoundry","CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_Containers_App"],"mappings":"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","file":"static/js/main.742f329f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, email, id}) => {\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n\n    );\n}\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n\nconst Cardlist = ({ robots }) => {\n    const cardComponent = robots.map((user, i) => {\n        return (\n        <Card \n            key= {i} \n            id={robots[i].id} \n            name={robots[i].name} \n            email={robots[i].email} />\n        );\n    })\n    return (\n        <div>\n       { cardComponent }\n      </div>\n    );\n\n}\nexport default Cardlist;","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) => {\n    return (\n        <div className='pa2'>\n            <input \n            className='pa3 ba b--green bg--lightest-blue' \n            type='search' \n            placeholder='search robots' \n            onChange={searchChange} />\n            \n        </div>\n    );\n\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\n\t\n\treturn (\n\t\t<div style = {{ overflowY: 'scroll', border:'5px solid black', height:'700px'}}>\n\t\t\t{props.children}\n\t\t</div>);\n};\n\nexport default Scroll;","import React, { Component} from 'react';\n\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({hasError: true})\n    }\n\n    render() {\n        if (this.state.hasError){\n            return <h1>Ooooops. That is not good</h1>\n        }\n\n        return this.props.children\n    }\n\n}\nexport default ErrorBoundary;","import React, {Component} from 'react';\nimport CardList from '../Components/CardList';\nimport SearchBox from '../Components/SearchBox';\nimport '../Containers/App.css';\nimport Scroll from '../Components/Scroll';\nimport ErrorBoundry from '../Components/ErrorBoundry'\n\n\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({ robots: users}));\n                \n    }\n\n    onSearchChange = (event) => {\n        this.setState ({ searchfield: event.target.value})\n    }\n\n    render() {\n        const filteredRobots = this.state.robots.filter(robots =>{\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n        })\n\n        if (this.state.robots.length === 0) {\n\n            return <h1> Loading</h1>\n        } else {\n            return (\n            <div className='tc'>\n                <h1 className='f2'>RoboFriends</h1>\n                <SearchBox searchChange={this.onSearchChange}/>\n                <Scroll>\n                    <ErrorBoundry>\n                    <CardList robots= { filteredRobots }/>\n                    </ErrorBoundry>\n                </Scroll>\n            </div>    \n        );\n        }\n    }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n   <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}